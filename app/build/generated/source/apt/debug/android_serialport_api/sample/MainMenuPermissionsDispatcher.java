// This file was generated by PermissionsDispatcher. Do not modify!
package android_serialport_api.sample;

import androidx.core.app.ActivityCompat;
import java.lang.String;
import permissions.dispatcher.PermissionUtils;

final class MainMenuPermissionsDispatcher {
  private static final int REQUEST_NEEDSPERMISSON = 1;

  private static final String[] PERMISSION_NEEDSPERMISSON = new String[] {"android.permission.READ_EXTERNAL_STORAGE","android.permission.WRITE_EXTERNAL_STORAGE"};

  private static final int REQUEST_TESTNEEDSPERMISSION = 2;

  private static final String[] PERMISSION_TESTNEEDSPERMISSION = new String[] {"android.permission.ACCESS_FINE_LOCATION","android.permission.ACCESS_COARSE_LOCATION"};

  private MainMenuPermissionsDispatcher() {
  }

  static void NeedsPermissonWithPermissionCheck(MainMenu target) {
    if (PermissionUtils.hasSelfPermissions(target, PERMISSION_NEEDSPERMISSON)) {
      target.NeedsPermisson();
    } else {
      ActivityCompat.requestPermissions(target, PERMISSION_NEEDSPERMISSON, REQUEST_NEEDSPERMISSON);
    }
  }

  static void testNeedsPermissionWithPermissionCheck(MainMenu target) {
    if (PermissionUtils.hasSelfPermissions(target, PERMISSION_TESTNEEDSPERMISSION)) {
      target.testNeedsPermission();
    } else {
      ActivityCompat.requestPermissions(target, PERMISSION_TESTNEEDSPERMISSION, REQUEST_TESTNEEDSPERMISSION);
    }
  }

  static void onRequestPermissionsResult(MainMenu target, int requestCode, int[] grantResults) {
    switch (requestCode) {
      case REQUEST_NEEDSPERMISSON:
      if (PermissionUtils.verifyPermissions(grantResults)) {
        target.NeedsPermisson();
      }
      break;
      case REQUEST_TESTNEEDSPERMISSION:
      if (PermissionUtils.verifyPermissions(grantResults)) {
        target.testNeedsPermission();
      }
      break;
      default:
      break;
    }
  }
}

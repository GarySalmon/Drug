// This file was generated by PermissionsDispatcher. Do not modify!
package android_serialport_api.Search;

import androidx.core.app.ActivityCompat;
import java.lang.Override;
import java.lang.String;
import java.lang.ref.WeakReference;
import permissions.dispatcher.PermissionRequest;
import permissions.dispatcher.PermissionUtils;

final class SearchSamplePermissionsDispatcher {
  private static final int REQUEST_GETPERMISSION = 2;

  private static final String[] PERMISSION_GETPERMISSION = new String[] {"android.permission.READ_EXTERNAL_STORAGE","android.permission.WRITE_EXTERNAL_STORAGE"};

  private SearchSamplePermissionsDispatcher() {
  }

  static void getPermissionWithPermissionCheck(SearchSample target) {
    if (PermissionUtils.hasSelfPermissions(target, PERMISSION_GETPERMISSION)) {
      target.getPermission();
    } else {
      if (PermissionUtils.shouldShowRequestPermissionRationale(target, PERMISSION_GETPERMISSION)) {
        target.showRationale(new SearchSampleGetPermissionPermissionRequest(target));
      } else {
        ActivityCompat.requestPermissions(target, PERMISSION_GETPERMISSION, REQUEST_GETPERMISSION);
      }
    }
  }

  static void onRequestPermissionsResult(SearchSample target, int requestCode, int[] grantResults) {
    switch (requestCode) {
      case REQUEST_GETPERMISSION:
      if (PermissionUtils.verifyPermissions(grantResults)) {
        target.getPermission();
      } else {
        if (!PermissionUtils.shouldShowRequestPermissionRationale(target, PERMISSION_GETPERMISSION)) {
          target.neverAskAgain();
        } else {
          target.permissionDenied();
        }
      }
      break;
      default:
      break;
    }
  }

  private static final class SearchSampleGetPermissionPermissionRequest implements PermissionRequest {
    private final WeakReference<SearchSample> weakTarget;

    private SearchSampleGetPermissionPermissionRequest(SearchSample target) {
      this.weakTarget = new WeakReference<SearchSample>(target);
    }

    @Override
    public void proceed() {
      SearchSample target = weakTarget.get();
      if (target == null) return;
      ActivityCompat.requestPermissions(target, PERMISSION_GETPERMISSION, REQUEST_GETPERMISSION);
    }

    @Override
    public void cancel() {
      SearchSample target = weakTarget.get();
      if (target == null) return;
      target.permissionDenied();
    }
  }
}
